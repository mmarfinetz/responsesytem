# Backend API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: plumbing-ai-platform
      component: backend
  template:
    metadata:
      labels:
        app: plumbing-ai-platform
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: backend
        image: plumbing-ai/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        # Configuration from ConfigMap
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: NODE_ENV
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: APP_NAME
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: APP_VERSION
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: DB_NAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: REDIS_PORT
        - name: JWT_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: JWT_EXPIRES_IN
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: RATE_LIMIT_WINDOW_MS
        - name: RATE_LIMIT_MAX
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: RATE_LIMIT_MAX
        - name: MAX_FILE_SIZE
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: MAX_FILE_SIZE
        - name: UPLOAD_PATH
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: UPLOAD_PATH
        - name: BCRYPT_ROUNDS
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: BCRYPT_ROUNDS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: LOG_LEVEL
        - name: LOG_FILE_PATH
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: LOG_FILE_PATH
        - name: HEALTH_CHECK_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: HEALTH_CHECK_TIMEOUT
        - name: GOOGLE_VOICE_API_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: GOOGLE_VOICE_API_TIMEOUT
        - name: ANTHROPIC_API_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: ANTHROPIC_API_TIMEOUT
        - name: MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: MAX_CONNECTIONS
        - name: CONNECTION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: CONNECTION_TIMEOUT
        - name: KEEP_ALIVE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: plumbing-ai-config
              key: KEEP_ALIVE_TIMEOUT
        
        # Secrets
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: plumbing-ai-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: plumbing-ai-secrets
              key: DB_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: plumbing-ai-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: plumbing-ai-secrets
              key: JWT_SECRET
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: plumbing-ai-secrets
              key: WEBHOOK_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: plumbing-ai-secrets
              key: SESSION_SECRET
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-api-secrets
              key: ANTHROPIC_API_KEY
        - name: GOOGLE_OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: external-api-secrets
              key: GOOGLE_OAUTH_CLIENT_ID
        - name: GOOGLE_OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: external-api-secrets
              key: GOOGLE_OAUTH_CLIENT_SECRET
        - name: GOOGLE_OAUTH_REDIRECT_URI
          valueFrom:
            secretKeyRef:
              name: external-api-secrets
              key: GOOGLE_OAUTH_REDIRECT_URI
        
        # Pod information
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Graceful shutdown
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: backend-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: backend-logs-pvc
      - name: data
        persistentVolumeClaim:
          claimName: backend-data-pvc
      
      # Pod disruption budget for high availability
      terminationGracePeriodSeconds: 30
      
      # Node affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/api/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: plumbing-ai-platform
    component: backend

---
# Horizontal Pod Autoscaler for Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
# Pod Disruption Budget for Backend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: plumbing-ai-platform
      component: backend

---
# PersistentVolumeClaims for Backend
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: "nfs-storage"
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-logs-pvc
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: "nfs-storage"
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-data-pvc
  namespace: plumbing-ai
  labels:
    app: plumbing-ai-platform
    component: backend
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: "nfs-storage"
  resources:
    requests:
      storage: 2Gi