version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: voicebot-postgres
    environment:
      POSTGRES_DB: voicebot
      POSTGRES_USER: voicebot
      POSTGRES_PASSWORD: voicebot123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voicebot -d voicebot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - voicebot-network

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: voicebot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - voicebot-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: voicebot-backend
    ports:
      - "3001:3001"
      - "3002:3002"  # Metrics port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://voicebot:voicebot123@postgres:5432/voicebot
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - voicebot-network
    restart: unless-stopped

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: voicebot-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - voicebot-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional for local development)
  nginx:
    image: nginx:alpine
    container_name: voicebot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - voicebot-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  voicebot-network:
    driver: bridge